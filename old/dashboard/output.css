/*! tailwindcss v3.3.5 | MIT License | https://tailwindcss.com*/
*,
:after,
:before {
	box-sizing: border-box;
	border: 0 solid #e5e7eb;
}
:after,
:before {
	--tw-content: '';
}
html {
	line-height: 1.5;
	-webkit-text-size-adjust: 100%;
	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;
	font-family:
		ui-sans-serif,
		system-ui,
		-apple-system,
		BlinkMacSystemFont,
		Segoe UI,
		Roboto,
		Helvetica Neue,
		Arial,
		Noto Sans,
		sans-serif,
		Apple Color Emoji,
		Segoe UI Emoji,
		Segoe UI Symbol,
		Noto Color Emoji;
	font-feature-settings: normal;
	font-variation-settings: normal;
}
body {
	margin: 0;
	line-height: inherit;
}
hr {
	height: 0;
	color: inherit;
	border-top-width: 1px;
}
abbr:where([title]) {
	-webkit-text-decoration: underline dotted;
	text-decoration: underline dotted;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	font-size: inherit;
	font-weight: inherit;
}
a {
	color: inherit;
	text-decoration: inherit;
}
b,
strong {
	font-weight: bolder;
}
code,
kbd,
pre,
samp {
	font-family:
		ui-monospace,
		SFMono-Regular,
		Menlo,
		Monaco,
		Consolas,
		Liberation Mono,
		Courier New,
		monospace;
	font-size: 1em;
}
small {
	font-size: 80%;
}
sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: initial;
}
sub {
	bottom: -0.25em;
}
sup {
	top: -0.5em;
}
table {
	text-indent: 0;
	border-color: inherit;
	border-collapse: collapse;
}
button,
input,
optgroup,
select,
textarea {
	font-family: inherit;
	font-feature-settings: inherit;
	font-variation-settings: inherit;
	font-size: 100%;
	font-weight: inherit;
	line-height: inherit;
	color: inherit;
	margin: 0;
	padding: 0;
}
button,
select {
	text-transform: none;
}
[type='button'],
[type='reset'],
[type='submit'],
button {
	-webkit-appearance: button;
	background-color: initial;
	background-image: none;
}
:-moz-focusring {
	outline: auto;
}
:-moz-ui-invalid {
	box-shadow: none;
}
progress {
	vertical-align: initial;
}
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}
[type='search'] {
	-webkit-appearance: textfield;
	outline-offset: -2px;
}
::-webkit-search-decoration {
	-webkit-appearance: none;
}
::-webkit-file-upload-button {
	-webkit-appearance: button;
	font: inherit;
}
summary {
	display: list-item;
}
blockquote,
dd,
dl,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
p,
pre {
	margin: 0;
}
fieldset {
	margin: 0;
}
fieldset,
legend {
	padding: 0;
}
menu,
ol,
ul {
	list-style: none;
	margin: 0;
	padding: 0;
}
dialog {
	padding: 0;
}
textarea {
	resize: vertical;
}
input::-moz-placeholder,
textarea::-moz-placeholder {
	opacity: 1;
	color: #9ca3af;
}
input::placeholder,
textarea::placeholder {
	opacity: 1;
	color: #9ca3af;
}
[role='button'],
button {
	cursor: pointer;
}
:disabled {
	cursor: default;
}
audio,
canvas,
embed,
iframe,
img,
object,
svg,
video {
	display: block;
	vertical-align: middle;
}
img,
video {
	max-width: 100%;
	height: auto;
}
[hidden] {
	display: none;
}
:root,
[data-theme] {
	background-color: var(--fallback-b1, oklch(var(--b1) / 1));
	color: var(--fallback-bc, oklch(var(--bc) / 1));
}
@supports not (color: oklch(0 0 0)) {
	:root {
		color-scheme: light;
		--fallback-p: #491eff;
		--fallback-pc: #d4dbff;
		--fallback-s: #ff41c7;
		--fallback-sc: #fff9fc;
		--fallback-a: #00cfbd;
		--fallback-ac: #00100d;
		--fallback-n: #2b3440;
		--fallback-nc: #d7dde4;
		--fallback-b1: #fff;
		--fallback-b2: #e5e6e6;
		--fallback-b3: #e5e6e6;
		--fallback-bc: #1f2937;
		--fallback-in: #00b3f0;
		--fallback-inc: #000;
		--fallback-su: #00ca92;
		--fallback-suc: #000;
		--fallback-wa: #ffc22d;
		--fallback-wac: #000;
		--fallback-er: #ff6f70;
		--fallback-erc: #000;
	}
	@media (prefers-color-scheme: dark) {
		:root {
			color-scheme: dark;
			--fallback-p: #7582ff;
			--fallback-pc: #050617;
			--fallback-s: #ff71cf;
			--fallback-sc: #190211;
			--fallback-a: #00c7b5;
			--fallback-ac: #000e0c;
			--fallback-n: #2a323c;
			--fallback-nc: #a6adbb;
			--fallback-b1: #1d232a;
			--fallback-b2: #191e24;
			--fallback-b3: #15191e;
			--fallback-bc: #a6adbb;
			--fallback-in: #00b3f0;
			--fallback-inc: #000;
			--fallback-su: #00ca92;
			--fallback-suc: #000;
			--fallback-wa: #ffc22d;
			--fallback-wac: #000;
			--fallback-er: #ff6f70;
			--fallback-erc: #000;
		}
	}
}
html {
	-webkit-tap-highlight-color: transparent;
}
:root {
	--p: 0.522134 0.266165 267.24331;
	--bc: 0.2 0 0;
	--pc: 0.904427 0.053233 267.24331;
	--sc: 0.139922 0.023914 194.065673;
	--ac: 0.129061 0.048193 30.187951;
	--nc: 0.836675 0.00771 279.588628;
	--inc: 0.169041 0.01454 224.645315;
	--suc: 0.168966 0.014526 170.194987;
	--wac: 0.168986 0.014446 87.7072;
	--erc: 0.168949 0.014547 30.260522;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--s: 0.699612 0.119569 194.065673;
	--a: 0.645306 0.240965 30.187951;
	--n: 0.183375 0.038551 279.588628;
	--b1: 1 0 0;
	--b2: 0.97651 0.005419 274.966562;
	--b3: 0.987609 0.001705 247.83885;
	--in: 0.845207 0.0727 224.645315;
	--su: 0.844828 0.07263 170.194987;
	--wa: 0.844932 0.072232 87.7072;
	--er: 0.844744 0.072733 30.260522;
}
@media (prefers-color-scheme: dark) {
	:root {
		--p: 0.522134 0.266165 267.24331;
		--bc: 0.871983 0.007617 280.258089;
		--pc: 0.904427 0.053233 267.24331;
		--sc: 0.139922 0.023914 194.065673;
		--ac: 0.129061 0.048193 30.187951;
		--nc: 0.888273 0.00759 278.914277;
		--inc: 0.169041 0.01454 224.645315;
		--suc: 0.168966 0.014526 170.194987;
		--wac: 0.168986 0.014446 87.7072;
		--erc: 0.168949 0.014547 30.260522;
		--rounded-box: 1rem;
		--rounded-btn: 0.5rem;
		--rounded-badge: 1.9rem;
		--animation-btn: 0.25s;
		--animation-input: 0.2s;
		--btn-focus-scale: 0.95;
		--border-btn: 1px;
		--tab-border: 1px;
		--tab-radius: 0.5rem;
		--s: 0.699612 0.119569 194.065673;
		--a: 0.645306 0.240965 30.187951;
		--n: 0.441367 0.03795 278.914277;
		--b1: 0.359914 0.038083 280.258089;
		--b2: 0.305478 0.039685 279.757229;
		--b3: 0.183375 0.038551 279.588628;
		--in: 0.845207 0.0727 224.645315;
		--su: 0.844828 0.07263 170.194987;
		--wa: 0.844932 0.072232 87.7072;
		--er: 0.844744 0.072733 30.260522;
	}
}
:root:has(input.theme-controller[value='light']:checked),
[data-theme='light'] {
	--p: 0.522134 0.266165 267.24331;
	--bc: 0.2 0 0;
	--pc: 0.904427 0.053233 267.24331;
	--sc: 0.139922 0.023914 194.065673;
	--ac: 0.129061 0.048193 30.187951;
	--nc: 0.836675 0.00771 279.588628;
	--inc: 0.169041 0.01454 224.645315;
	--suc: 0.168966 0.014526 170.194987;
	--wac: 0.168986 0.014446 87.7072;
	--erc: 0.168949 0.014547 30.260522;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--s: 0.699612 0.119569 194.065673;
	--a: 0.645306 0.240965 30.187951;
	--n: 0.183375 0.038551 279.588628;
	--b1: 1 0 0;
	--b2: 0.97651 0.005419 274.966562;
	--b3: 0.987609 0.001705 247.83885;
	--in: 0.845207 0.0727 224.645315;
	--su: 0.844828 0.07263 170.194987;
	--wa: 0.844932 0.072232 87.7072;
	--er: 0.844744 0.072733 30.260522;
}
:root:has(input.theme-controller[value='dark']:checked),
[data-theme='dark'] {
	--p: 0.522134 0.266165 267.24331;
	--bc: 0.871983 0.007617 280.258089;
	--pc: 0.904427 0.053233 267.24331;
	--sc: 0.139922 0.023914 194.065673;
	--ac: 0.129061 0.048193 30.187951;
	--nc: 0.888273 0.00759 278.914277;
	--inc: 0.169041 0.01454 224.645315;
	--suc: 0.168966 0.014526 170.194987;
	--wac: 0.168986 0.014446 87.7072;
	--erc: 0.168949 0.014547 30.260522;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--s: 0.699612 0.119569 194.065673;
	--a: 0.645306 0.240965 30.187951;
	--n: 0.441367 0.03795 278.914277;
	--b1: 0.359914 0.038083 280.258089;
	--b2: 0.305478 0.039685 279.757229;
	--b3: 0.183375 0.038551 279.588628;
	--in: 0.845207 0.0727 224.645315;
	--su: 0.844828 0.07263 170.194987;
	--wa: 0.844932 0.072232 87.7072;
	--er: 0.844744 0.072733 30.260522;
}
*,
::backdrop,
:after,
:before {
	--tw-border-spacing-x: 0;
	--tw-border-spacing-y: 0;
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x: ;
	--tw-pan-y: ;
	--tw-pinch-zoom: ;
	--tw-scroll-snap-strictness: proximity;
	--tw-gradient-from-position: ;
	--tw-gradient-via-position: ;
	--tw-gradient-to-position: ;
	--tw-ordinal: ;
	--tw-slashed-zero: ;
	--tw-numeric-figure: ;
	--tw-numeric-spacing: ;
	--tw-numeric-fraction: ;
	--tw-ring-inset: ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: #3b82f680;
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur: ;
	--tw-brightness: ;
	--tw-contrast: ;
	--tw-grayscale: ;
	--tw-hue-rotate: ;
	--tw-invert: ;
	--tw-saturate: ;
	--tw-sepia: ;
	--tw-drop-shadow: ;
	--tw-backdrop-blur: ;
	--tw-backdrop-brightness: ;
	--tw-backdrop-contrast: ;
	--tw-backdrop-grayscale: ;
	--tw-backdrop-hue-rotate: ;
	--tw-backdrop-invert: ;
	--tw-backdrop-opacity: ;
	--tw-backdrop-saturate: ;
	--tw-backdrop-sepia: ;
}
.alert {
	display: grid;
	width: 100%;
	grid-auto-flow: row;
	align-content: flex-start;
	align-items: center;
	justify-items: center;
	gap: 1rem;
	text-align: center;
	border-radius: var(--rounded-box, 1rem);
	border-width: 1px;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
	padding: 1rem;
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--alert-bg: var(--fallback-b2, oklch(var(--b2) / 1));
	--alert-bg-mix: var(--fallback-b1, oklch(var(--b1) / 1));
	background-color: var(--alert-bg);
}
@media (min-width: 640px) {
	.alert {
		grid-auto-flow: column;
		grid-template-columns: auto minmax(auto, 1fr);
		justify-items: start;
		text-align: start;
	}
}
.avatar {
	position: relative;
	display: inline-flex;
}
.avatar > div {
	display: block;
	aspect-ratio: 1/1;
	overflow: hidden;
}
.avatar img {
	height: 100%;
	width: 100%;
	-o-object-fit: cover;
	object-fit: cover;
}
.avatar.placeholder > div {
	display: flex;
	align-items: center;
	justify-content: center;
}
.badge {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	transition-property:
		color,
		background-color,
		border-color,
		text-decoration-color,
		fill,
		stroke,
		opacity,
		box-shadow,
		transform,
		filter,
		-webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property:
		color,
		background-color,
		border-color,
		text-decoration-color,
		fill,
		stroke,
		opacity,
		box-shadow,
		transform,
		filter,
		backdrop-filter,
		-webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-duration: 0.2s;
	height: 1.25rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	width: -moz-fit-content;
	width: fit-content;
	padding-left: 0.563rem;
	padding-right: 0.563rem;
	border-radius: var(--rounded-badge, 1.9rem);
	border-width: 1px;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
}
@media (hover: hover) {
	.link-hover:hover {
		text-decoration-line: underline;
	}
	.label a:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	}
	.menu li > :not(ul):not(.menu-title):not(details).active,
	.menu li > :not(ul):not(.menu-title):not(details):active,
	.menu li > details > summary:active {
		--tw-bg-opacity: 1;
		background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
		--tw-text-opacity: 1;
		color: var(--fallback-nc, oklch(var(--nc) / var(--tw-text-opacity)));
	}
	.table tr.hover:hover,
	.table tr.hover:nth-child(2n):hover {
		--tw-bg-opacity: 1;
		background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
	}
	.table-zebra tr.hover:hover,
	.table-zebra tr.hover:nth-child(2n):hover {
		--tw-bg-opacity: 1;
		background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
	}
}
.btn {
	display: inline-flex;
	height: 3rem;
	min-height: 3rem;
	flex-shrink: 0;
	cursor: pointer;
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	border-radius: var(--rounded-btn, 0.5rem);
	border-color: #0000;
	border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1));
	padding-left: 1rem;
	padding-right: 1rem;
	text-align: center;
	font-size: 0.875rem;
	line-height: 1em;
	gap: 0.5rem;
	font-weight: 600;
	text-decoration-line: none;
	transition-duration: 0.2s;
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	border-width: var(--border-btn, 1px);
	animation: button-pop var(--animation-btn, 0.25s) ease-out;
	transition-property: color, background-color, border-color, opacity, box-shadow, transform;
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-shadow: 0 1px 2px 0 #0000000d;
	--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
		var(--tw-shadow);
	outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
	background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1));
}
.btn-disabled,
.btn:disabled,
.btn[disabled] {
	pointer-events: none;
}
.btn-circle,
.btn-square {
	height: 3rem;
	width: 3rem;
	padding: 0;
}
.btn-circle {
	border-radius: 9999px;
}
:where(.btn:is(input[type='checkbox'])),
:where(.btn:is(input[type='radio'])) {
	width: auto;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}
.btn:is(input[type='checkbox']):after,
.btn:is(input[type='radio']):after {
	--tw-content: attr(aria-label);
	content: var(--tw-content);
}
.card {
	position: relative;
	display: flex;
	flex-direction: column;
	border-radius: var(--rounded-box, 1rem);
}
.card:focus {
	outline: 2px solid #0000;
	outline-offset: 2px;
}
.card-body {
	display: flex;
	flex: 1 1 auto;
	flex-direction: column;
	padding: var(--padding-card, 2rem);
	gap: 0.5rem;
}
.card-body :where(p) {
	flex-grow: 1;
}
.card figure {
	display: flex;
	align-items: center;
	justify-content: center;
}
.card.image-full {
	display: grid;
}
.card.image-full:before {
	position: relative;
	content: '';
	z-index: 10;
	border-radius: var(--rounded-box, 1rem);
	--tw-bg-opacity: 1;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	opacity: 0.75;
}
.card.image-full:before,
.card.image-full > * {
	grid-column-start: 1;
	grid-row-start: 1;
}
.card.image-full > figure img {
	height: 100%;
	-o-object-fit: cover;
	object-fit: cover;
}
.card.image-full > .card-body {
	position: relative;
	z-index: 20;
	--tw-text-opacity: 1;
	color: var(--fallback-nc, oklch(var(--nc) / var(--tw-text-opacity)));
}
.checkbox {
	flex-shrink: 0;
}
.drawer {
	position: relative;
	display: grid;
	grid-auto-columns: max-content auto;
	width: 100%;
}
.drawer-content {
	grid-column-start: 2;
	grid-row-start: 1;
}
.drawer-side {
	pointer-events: none;
	position: fixed;
	inset-inline-start: 0;
	top: 0;
	grid-column-start: 1;
	grid-row-start: 1;
	display: grid;
	width: 100%;
	grid-template-columns: repeat(1, minmax(0, 1fr));
	grid-template-rows: repeat(1, minmax(0, 1fr));
	align-items: flex-start;
	justify-items: start;
	overflow-y: auto;
	overscroll-behavior: contain;
	height: 100vh;
	height: 100dvh;
	scrollbar-width: none;
}
.drawer-side::-webkit-scrollbar {
	display: none;
}
.drawer-side > .drawer-overlay {
	position: sticky;
	top: 0;
	place-self: stretch;
	cursor: pointer;
	background-color: initial;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-duration: 0.2s;
}
.drawer-side > * {
	grid-column-start: 1;
	grid-row-start: 1;
}
.drawer-side > :not(.drawer-overlay) {
	transition-property: transform;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-duration: 0.3s;
	will-change: transform;
	transform: translateX(-100%);
}
[dir='rtl'] .drawer-side > :not(.drawer-overlay) {
	transform: translateX(100%);
}
.drawer-toggle {
	position: fixed;
	height: 0;
	width: 0;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	opacity: 0;
}
.drawer-toggle:checked ~ .drawer-side {
	pointer-events: auto;
	visibility: visible;
}
.drawer-toggle:checked ~ .drawer-side > :not(.drawer-overlay) {
	transform: translateX(0);
}
.drawer-end .drawer-toggle ~ .drawer-content {
	grid-column-start: 1;
}
.drawer-end .drawer-toggle ~ .drawer-side {
	grid-column-start: 2;
	justify-items: end;
}
.drawer-end .drawer-toggle ~ .drawer-side > :not(.drawer-overlay) {
	transform: translateX(100%);
}
[dir='rtl'] .drawer-end .drawer-toggle ~ .drawer-side > :not(.drawer-overlay) {
	transform: translateX(-100%);
}
.drawer-end .drawer-toggle:checked ~ .drawer-side > :not(.drawer-overlay) {
	transform: translateX(0);
}
.dropdown {
	position: relative;
	display: inline-block;
}
.dropdown > :not(summary):focus {
	outline: 2px solid #0000;
	outline-offset: 2px;
}
.dropdown .dropdown-content {
	position: absolute;
}
.dropdown:is(:not(details)) .dropdown-content {
	visibility: hidden;
	opacity: 0;
	transform-origin: top;
	--tw-scale-x: 0.95;
	--tw-scale-y: 0.95;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
	transition-property:
		color,
		background-color,
		border-color,
		text-decoration-color,
		fill,
		stroke,
		opacity,
		box-shadow,
		transform,
		filter,
		-webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property:
		color,
		background-color,
		border-color,
		text-decoration-color,
		fill,
		stroke,
		opacity,
		box-shadow,
		transform,
		filter,
		backdrop-filter,
		-webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-duration: 0.2s;
}
.dropdown-end .dropdown-content {
	inset-inline-end: 0;
}
.dropdown-left .dropdown-content {
	bottom: auto;
	inset-inline-end: 100%;
	top: 0;
	transform-origin: right;
}
.dropdown-right .dropdown-content {
	bottom: auto;
	inset-inline-start: 100%;
	top: 0;
	transform-origin: left;
}
.dropdown-bottom .dropdown-content {
	bottom: auto;
	top: 100%;
	transform-origin: top;
}
.dropdown-top .dropdown-content {
	bottom: 100%;
	top: auto;
	transform-origin: bottom;
}
.dropdown-end.dropdown-left .dropdown-content,
.dropdown-end.dropdown-right .dropdown-content {
	bottom: 0;
	top: auto;
}
.dropdown.dropdown-open .dropdown-content,
.dropdown:focus-within .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content {
	visibility: visible;
	opacity: 1;
}
@media (hover: hover) {
	.dropdown.dropdown-hover:hover .dropdown-content {
		visibility: visible;
		opacity: 1;
	}
	.btm-nav > .disabled:hover,
	.btm-nav > [disabled]:hover {
		pointer-events: none;
		--tw-border-opacity: 0;
		background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
		--tw-bg-opacity: 0.1;
		color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
		--tw-text-opacity: 0.2;
	}
	.btn:hover {
		--tw-border-opacity: 1;
		border-color: color-mix(
			in oklab,
			oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity)) 90%,
			#000
		);
		--tw-bg-opacity: 1;
		background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
		background-color: color-mix(
			in oklab,
			oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity)) 90%,
			#000
		);
	}
	@supports not (color: oklch(0 0 0)) {
		.btn:hover {
			background-color: var(--btn-color, var(--fallback-b2));
			border-color: var(--btn-color, var(--fallback-b2));
		}
	}
	.btn.glass:hover {
		--glass-opacity: 25%;
		--glass-border-opacity: 15%;
	}
	.btn-ghost:hover {
		border-color: #0000;
	}
	@supports (color: oklch(0 0 0)) {
		.btn-ghost:hover {
			background-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
		}
	}
	.btn-outline:hover {
		--tw-border-opacity: 1;
		border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
		--tw-bg-opacity: 1;
		background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
		--tw-text-opacity: 1;
		color: var(--fallback-b1, oklch(var(--b1) / var(--tw-text-opacity)));
	}
	.btn-outline.btn-primary:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
		background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, #000);
	}
	.btn-outline.btn-secondary:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-sc, oklch(var(--sc) / var(--tw-text-opacity)));
		background-color: color-mix(in oklab, var(--fallback-s, oklch(var(--s) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-s, oklch(var(--s) / 1)) 90%, #000);
	}
	.btn-outline.btn-accent:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-ac, oklch(var(--ac) / var(--tw-text-opacity)));
		background-color: color-mix(in oklab, var(--fallback-a, oklch(var(--a) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-a, oklch(var(--a) / 1)) 90%, #000);
	}
	.btn-outline.btn-success:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
		background-color: color-mix(in oklab, var(--fallback-su, oklch(var(--su) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-su, oklch(var(--su) / 1)) 90%, #000);
	}
	.btn-outline.btn-info:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-inc, oklch(var(--inc) / var(--tw-text-opacity)));
		background-color: color-mix(in oklab, var(--fallback-in, oklch(var(--in) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-in, oklch(var(--in) / 1)) 90%, #000);
	}
	.btn-outline.btn-warning:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-wac, oklch(var(--wac) / var(--tw-text-opacity)));
		background-color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa) / 1)) 90%, #000);
	}
	.btn-outline.btn-error:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-erc, oklch(var(--erc) / var(--tw-text-opacity)));
		background-color: color-mix(in oklab, var(--fallback-er, oklch(var(--er) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-er, oklch(var(--er) / 1)) 90%, #000);
	}
	.btn-disabled:hover,
	.btn:disabled:hover,
	.btn[disabled]:hover {
		--tw-border-opacity: 0;
		background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
		--tw-bg-opacity: 0.2;
		color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
		--tw-text-opacity: 0.2;
	}
	.btn:is(input[type='checkbox']:checked):hover,
	.btn:is(input[type='radio']:checked):hover {
		background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, #000);
	}
	.dropdown.dropdown-hover:hover .dropdown-content {
		--tw-scale-x: 1;
		--tw-scale-y: 1;
		transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
			skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
			scaleY(var(--tw-scale-y));
	}
	:where(.menu li:not(.menu-title):not(.disabled) > :not(ul):not(details):not(.menu-title)):not(
			.active
		):hover,
	:where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(
			.active
		):hover {
		cursor: pointer;
		--tw-text-opacity: 1;
		color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
		outline: 2px solid #0000;
		outline-offset: 2px;
	}
	@supports (color: oklch(0 0 0)) {
		:where(.menu li:not(.menu-title):not(.disabled) > :not(ul):not(details):not(.menu-title)):not(
				.active
			):hover,
		:where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(
				.active
			):hover {
			background-color: var(--fallback-bc, oklch(var(--bc) / 0.1));
		}
	}
}
.dropdown:is(details) summary::-webkit-details-marker {
	display: none;
}
.form-control {
	flex-direction: column;
}
.form-control,
.label {
	display: flex;
}
.label {
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
	align-items: center;
	justify-content: space-between;
	padding: 0.5rem 0.25rem;
}
.indicator {
	position: relative;
	display: inline-flex;
	width: -moz-max-content;
	width: max-content;
}
.indicator :where(.indicator-item) {
	z-index: 1;
	position: absolute;
	white-space: nowrap;
}
.input {
	flex-shrink: 1;
	height: 3rem;
	padding-left: 1rem;
	padding-right: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 2;
}
.join {
	display: inline-flex;
	align-items: stretch;
	border-radius: var(--rounded-btn, 0.5rem);
}
.join :where(.join-item) {
	border-start-end-radius: 0;
	border-end-end-radius: 0;
	border-end-start-radius: 0;
	border-start-start-radius: 0;
}
.join .join-item:not(:first-child):not(:last-child),
.join :not(:first-child):not(:last-child) .join-item {
	border-start-end-radius: 0;
	border-end-end-radius: 0;
	border-end-start-radius: 0;
	border-start-start-radius: 0;
}
.join .join-item:first-child:not(:last-child),
.join :first-child:not(:last-child) .join-item {
	border-start-end-radius: 0;
	border-end-end-radius: 0;
}
.join .dropdown .join-item:first-child:not(:last-child),
.join :first-child:not(:last-child) .dropdown .join-item {
	border-start-end-radius: inherit;
	border-end-end-radius: inherit;
}
.join :where(.join-item:first-child:not(:last-child)),
.join :where(:first-child:not(:last-child) .join-item) {
	border-end-start-radius: inherit;
	border-start-start-radius: inherit;
}
.join .join-item:last-child:not(:first-child),
.join :last-child:not(:first-child) .join-item {
	border-end-start-radius: 0;
	border-start-start-radius: 0;
}
.join :where(.join-item:last-child:not(:first-child)),
.join :where(:last-child:not(:first-child) .join-item) {
	border-start-end-radius: inherit;
	border-end-end-radius: inherit;
}
@supports not selector(:has(*)) {
	:where(.join *) {
		border-radius: inherit;
	}
}
@supports selector(:has(*)) {
	:where(.join :has(.join-item)) {
		border-radius: inherit;
	}
}
.link {
	cursor: pointer;
	text-decoration-line: underline;
}
.link-hover {
	text-decoration-line: none;
}
.mask {
	-webkit-mask-size: contain;
	mask-size: contain;
	-webkit-mask-repeat: no-repeat;
	mask-repeat: no-repeat;
	-webkit-mask-position: center;
	mask-position: center;
}
.menu {
	display: flex;
	flex-direction: column;
	flex-wrap: wrap;
	font-size: 0.875rem;
	line-height: 1.25rem;
	padding: 0.5rem;
}
.menu :where(li ul) {
	position: relative;
	white-space: nowrap;
	margin-inline-start: 1rem;
	padding-inline-start: 0.5rem;
}
.menu :where(li:not(.menu-title) > :not(ul):not(details):not(.menu-title)),
.menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
	display: grid;
	grid-auto-flow: column;
	align-content: flex-start;
	align-items: center;
	gap: 0.5rem;
	grid-auto-columns: minmax(auto, max-content) auto max-content;
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
}
.menu li.disabled {
	cursor: not-allowed;
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
	color: var(--fallback-bc, oklch(var(--bc) / 0.3));
}
.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
	display: none;
}
:where(.menu li) {
	position: relative;
	display: flex;
	flex-shrink: 0;
	flex-direction: column;
	flex-wrap: wrap;
	align-items: stretch;
}
:where(.menu li) .badge {
	justify-self: end;
}
.radio {
	flex-shrink: 0;
}
.range {
	height: 1.5rem;
	width: 100%;
	cursor: pointer;
	-moz-appearance: none;
	appearance: none;
	-webkit-appearance: none;
	--range-shdw: var(--fallback-bc, oklch(var(--bc) / 1));
	overflow: hidden;
	border-radius: var(--rounded-box, 1rem);
	background-color: initial;
}
.range:focus {
	outline: none;
}
.select {
	display: inline-flex;
	cursor: pointer;
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	height: 3rem;
	min-height: 3rem;
	padding-left: 1rem;
	padding-right: 2.5rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 2;
}
.select[multiple] {
	height: auto;
}
.stats {
	display: inline-grid;
	border-radius: var(--rounded-box, 1rem);
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
}
:where(.stats) {
	grid-auto-flow: column;
	overflow-x: auto;
}
.stat {
	display: inline-grid;
	width: 100%;
	grid-template-columns: repeat(1, 1fr);
	-moz-column-gap: 1rem;
	column-gap: 1rem;
	border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
	--tw-border-opacity: 0.1;
	padding: 1rem 1.5rem;
}
.stat-title {
	color: var(--fallback-bc, oklch(var(--bc) / 0.6));
}
.stat-title,
.stat-value {
	grid-column-start: 1;
	white-space: nowrap;
}
.stat-value {
	font-size: 2.25rem;
	line-height: 2.5rem;
	font-weight: 800;
}
.stat-desc {
	grid-column-start: 1;
	white-space: nowrap;
	font-size: 0.75rem;
	line-height: 1rem;
	color: var(--fallback-bc, oklch(var(--bc) / 0.6));
}
.steps .step {
	display: grid;
	grid-template-columns: repeat(1, minmax(0, 1fr));
	grid-template-columns: auto;
	grid-template-rows: repeat(2, minmax(0, 1fr));
	grid-template-rows: 40px 1fr;
	place-items: center;
	text-align: center;
	min-width: 4rem;
}
.table {
	position: relative;
	width: 100%;
	border-radius: var(--rounded-box, 1rem);
	text-align: left;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.table :where(.table-pin-rows thead tr) {
	position: sticky;
	top: 0;
	z-index: 1;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
}
.table :where(.table-pin-rows tfoot tr) {
	position: sticky;
	bottom: 0;
	z-index: 1;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
}
.table :where(.table-pin-cols tr th) {
	position: sticky;
	left: 0;
	right: 0;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
}
.table-zebra tbody tr:nth-child(2n) :where(.table-pin-cols tr th) {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
}
.toggle {
	flex-shrink: 0;
}
.alert-success {
	border-color: var(--fallback-su, oklch(var(--su) / 0.2));
	--tw-text-opacity: 1;
	color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
	--alert-bg: var(--fallback-su, oklch(var(--su) / 1));
	--alert-bg-mix: var(--fallback-b1, oklch(var(--b1) / 1));
}
.avatar-group :where(.avatar) {
	overflow: hidden;
	border-radius: 9999px;
	border-width: 4px;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-border-opacity)));
}
.badge-info {
	background-color: var(--fallback-in, oklch(var(--in) / var(--tw-bg-opacity)));
	color: var(--fallback-inc, oklch(var(--inc) / var(--tw-text-opacity)));
}
.badge-info,
.badge-success {
	border-color: #0000;
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
}
.badge-success {
	background-color: var(--fallback-su, oklch(var(--su) / var(--tw-bg-opacity)));
	color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
}
.badge-error {
	border-color: #0000;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-er, oklch(var(--er) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-erc, oklch(var(--erc) / var(--tw-text-opacity)));
}
.badge-outline.badge-info {
	--tw-text-opacity: 1;
	color: var(--fallback-in, oklch(var(--in) / var(--tw-text-opacity)));
}
.badge-outline.badge-success {
	--tw-text-opacity: 1;
	color: var(--fallback-su, oklch(var(--su) / var(--tw-text-opacity)));
}
.badge-outline.badge-error {
	--tw-text-opacity: 1;
	color: var(--fallback-er, oklch(var(--er) / var(--tw-text-opacity)));
}
.btm-nav > :where(.active) {
	border-top-width: 2px;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
}
.btm-nav > .disabled,
.btm-nav > [disabled] {
	pointer-events: none;
	--tw-border-opacity: 0;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	--tw-bg-opacity: 0.1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-text-opacity: 0.2;
}
.btm-nav > * .label {
	font-size: 1rem;
	line-height: 1.5rem;
}
.btn:active:focus,
.btn:active:hover {
	animation: button-pop 0s ease-out;
	transform: scale(var(--btn-focus-scale, 0.97));
}
@supports not (color: oklch(0 0 0)) {
	.btn {
		background-color: var(--btn-color, var(--fallback-b2));
		border-color: var(--btn-color, var(--fallback-b2));
	}
	.btn-primary {
		--btn-color: var(--fallback-p);
	}
}
.btn:focus-visible {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
}
.btn-primary {
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
	outline-color: var(--fallback-p, oklch(var(--p) / 1));
}
@supports (color: oklch(0 0 0)) {
	.btn-primary {
		--btn-color: var(--p);
	}
}
.btn.glass {
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
		var(--tw-shadow);
	outline-color: currentColor;
}
.btn.glass.btn-active {
	--glass-opacity: 25%;
	--glass-border-opacity: 15%;
}
.btn-ghost {
	border-width: 1px;
	border-color: #0000;
	background-color: initial;
	color: currentColor;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
		var(--tw-shadow);
	outline-color: currentColor;
}
.btn-ghost.btn-active {
	border-color: #0000;
	background-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.btn-outline {
	border-color: currentColor;
	background-color: initial;
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
		var(--tw-shadow);
}
.btn-outline.btn-active {
	--tw-border-opacity: 1;
	border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-b1, oklch(var(--b1) / var(--tw-text-opacity)));
}
.btn-outline.btn-primary {
	--tw-text-opacity: 1;
	color: var(--fallback-p, oklch(var(--p) / var(--tw-text-opacity)));
}
.btn-outline.btn-primary.btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
	background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, #000);
	border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, #000);
}
.btn-outline.btn-secondary {
	--tw-text-opacity: 1;
	color: var(--fallback-s, oklch(var(--s) / var(--tw-text-opacity)));
}
.btn-outline.btn-secondary.btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-sc, oklch(var(--sc) / var(--tw-text-opacity)));
	background-color: color-mix(in oklab, var(--fallback-s, oklch(var(--s) / 1)) 90%, #000);
	border-color: color-mix(in oklab, var(--fallback-s, oklch(var(--s) / 1)) 90%, #000);
}
.btn-outline.btn-accent {
	--tw-text-opacity: 1;
	color: var(--fallback-a, oklch(var(--a) / var(--tw-text-opacity)));
}
.btn-outline.btn-accent.btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-ac, oklch(var(--ac) / var(--tw-text-opacity)));
	background-color: color-mix(in oklab, var(--fallback-a, oklch(var(--a) / 1)) 90%, #000);
	border-color: color-mix(in oklab, var(--fallback-a, oklch(var(--a) / 1)) 90%, #000);
}
.btn-outline.btn-success {
	--tw-text-opacity: 1;
	color: var(--fallback-su, oklch(var(--su) / var(--tw-text-opacity)));
}
.btn-outline.btn-success.btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
	background-color: color-mix(in oklab, var(--fallback-su, oklch(var(--su) / 1)) 90%, #000);
	border-color: color-mix(in oklab, var(--fallback-su, oklch(var(--su) / 1)) 90%, #000);
}
.btn-outline.btn-info {
	--tw-text-opacity: 1;
	color: var(--fallback-in, oklch(var(--in) / var(--tw-text-opacity)));
}
.btn-outline.btn-info.btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-inc, oklch(var(--inc) / var(--tw-text-opacity)));
	background-color: color-mix(in oklab, var(--fallback-in, oklch(var(--in) / 1)) 90%, #000);
	border-color: color-mix(in oklab, var(--fallback-in, oklch(var(--in) / 1)) 90%, #000);
}
.btn-outline.btn-warning {
	--tw-text-opacity: 1;
	color: var(--fallback-wa, oklch(var(--wa) / var(--tw-text-opacity)));
}
.btn-outline.btn-warning.btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-wac, oklch(var(--wac) / var(--tw-text-opacity)));
	background-color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa) / 1)) 90%, #000);
	border-color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa) / 1)) 90%, #000);
}
.btn-outline.btn-error {
	--tw-text-opacity: 1;
	color: var(--fallback-er, oklch(var(--er) / var(--tw-text-opacity)));
}
.btn-outline.btn-error.btn-active {
	--tw-text-opacity: 1;
	color: var(--fallback-erc, oklch(var(--erc) / var(--tw-text-opacity)));
	background-color: color-mix(in oklab, var(--fallback-er, oklch(var(--er) / 1)) 90%, #000);
	border-color: color-mix(in oklab, var(--fallback-er, oklch(var(--er) / 1)) 90%, #000);
}
.btn.btn-disabled,
.btn:disabled,
.btn[disabled] {
	--tw-border-opacity: 0;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	--tw-bg-opacity: 0.2;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-text-opacity: 0.2;
}
.btn:is(input[type='checkbox']:checked),
.btn:is(input[type='radio']:checked) {
	--tw-border-opacity: 1;
	border-color: var(--fallback-p, oklch(var(--p) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}
.btn:is(input[type='checkbox']:checked):focus-visible,
.btn:is(input[type='radio']:checked):focus-visible {
	outline-color: var(--fallback-p, oklch(var(--p) / 1));
}
@keyframes button-pop {
	0% {
		transform: scale(var(--btn-focus-scale, 0.98));
	}
	40% {
		transform: scale(1.02);
	}
	to {
		transform: scale(1);
	}
}
.card :where(figure:first-child) {
	overflow: hidden;
	border-start-start-radius: inherit;
	border-start-end-radius: inherit;
	border-end-start-radius: unset;
	border-end-end-radius: unset;
}
.card :where(figure:last-child) {
	overflow: hidden;
	border-start-start-radius: unset;
	border-start-end-radius: unset;
	border-end-start-radius: inherit;
	border-end-end-radius: inherit;
}
.card:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: 2px;
}
.card.bordered {
	border-width: 1px;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
}
.card.compact .card-body {
	padding: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.card-title {
	display: flex;
	align-items: center;
	gap: 0.5rem;
	font-size: 1.25rem;
	line-height: 1.75rem;
	font-weight: 600;
}
.card.image-full :where(figure) {
	overflow: hidden;
	border-radius: inherit;
}
[type='checkbox'].checkbox {
	--chkbg: var(--fallback-bc, oklch(var(--bc) / 1));
	--chkfg: var(--fallback-b1, oklch(var(--b1) / 1));
	height: 1.5rem;
	width: 1.5rem;
	cursor: pointer;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	border-radius: var(--rounded-btn, 0.5rem);
	border-width: 1px;
	border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
	--tw-border-opacity: 0.2;
}
[type='checkbox'].checkbox:focus {
	box-shadow: none;
}
[type='checkbox'].checkbox:focus-visible {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
	outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
}
[type='checkbox'].checkbox:checked,
[type='checkbox'].checkbox[aria-checked='true'],
[type='checkbox'].checkbox[checked='true'] {
	background-image: linear-gradient(-45deg, #0000 65%, var(--chkbg) 65.99%),
		linear-gradient(45deg, #0000 75%, var(--chkbg) 75.99%),
		linear-gradient(-45deg, var(--chkbg) 40%, #0000 40.99%),
		linear-gradient(45deg, var(--chkbg) 30%, var(--chkfg) 30.99%, var(--chkfg) 40%, #0000 40.99%),
		linear-gradient(-45deg, var(--chkfg) 50%, var(--chkbg) 50.99%);
}
[type='checkbox'].checkbox:checked,
[type='checkbox'].checkbox:indeterminate,
[type='checkbox'].checkbox[aria-checked='true'],
[type='checkbox'].checkbox[checked='true'] {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	background-repeat: no-repeat;
	animation: checkmark var(--animation-input, 0.2s) ease-out;
}
[type='checkbox'].checkbox:indeterminate {
	background-image: linear-gradient(90deg, #0000 80%, var(--chkbg) 80%),
		linear-gradient(-90deg, #0000 80%, var(--chkbg) 80%),
		linear-gradient(0deg, var(--chkbg) 43%, var(--chkfg) 43%, var(--chkfg) 57%, var(--chkbg) 57%);
}
[type='checkbox'].checkbox:disabled {
	cursor: not-allowed;
	border-color: #0000;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	opacity: 0.2;
}
@keyframes checkmark {
	0% {
		background-position-y: 5px;
	}
	50% {
		background-position-y: -2px;
	}
	to {
		background-position-y: 0;
	}
}
.drawer-toggle:checked ~ .drawer-side > .drawer-overlay {
	background-color: #0006;
}
.drawer-toggle:focus-visible ~ .drawer-content label.drawer-button {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
}
.dropdown.dropdown-open .dropdown-content,
.dropdown:focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.label-text {
	font-size: 0.875rem;
	line-height: 1.25rem;
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
}
.input,
input.input {
	border-radius: var(--rounded-btn, 0.5rem);
	border-width: 1px;
	border-color: #0000;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
	font-size: 1rem;
	line-height: 1.5rem;
}
.input input:focus,
input.input input:focus {
	outline: 2px solid #0000;
	outline-offset: 2px;
}
.input[list]::-webkit-calendar-picker-indicator,
input.input[list]::-webkit-calendar-picker-indicator {
	line-height: 1em;
}
.input-bordered,
input.input-bordered {
	border-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.input:focus,
.input:focus-within,
input.input:focus,
input.input:focus-within {
	box-shadow: none;
	border-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
	outline-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.input-ghost,
input.input-ghost {
	--tw-bg-opacity: 0.05;
}
.input-ghost:focus,
.input-ghost:focus-within,
input.input-ghost:focus,
input.input-ghost:focus-within {
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	box-shadow: none;
}
.input-disabled,
.input:disabled,
.input[disabled],
input.input-disabled,
input.input:disabled,
input.input[disabled] {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
	color: var(--fallback-bc, oklch(var(--bc) / 0.4));
}
.input-disabled::-moz-placeholder,
.input:disabled::-moz-placeholder,
.input[disabled]::-moz-placeholder,
input.input-disabled::-moz-placeholder,
input.input:disabled::-moz-placeholder,
input.input[disabled]::-moz-placeholder {
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
	--tw-placeholder-opacity: 0.2;
}
.input-disabled::placeholder,
.input:disabled::placeholder,
.input[disabled]::placeholder,
input.input-disabled::placeholder,
input.input:disabled::placeholder,
input.input[disabled]::placeholder {
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
	--tw-placeholder-opacity: 0.2;
}
.join > :where(:not(:first-child)) {
	margin-top: 0;
	margin-bottom: 0;
	margin-inline-start: -1px;
}
.join-item:focus {
	isolation: isolate;
}
.link:focus {
	outline: 2px solid #0000;
	outline-offset: 2px;
}
.link:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: 2px;
}
.mask-squircle {
	-webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='200'%3E%3Cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3E%3C/svg%3E");
	mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='200'%3E%3Cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3E%3C/svg%3E");
}
:where(.menu li:empty) {
	background-color: var(--fallback-bc, oklch(var(--bc) / 0.1));
	margin: 0.5rem 1rem;
	height: 1px;
}
.menu :where(li ul):before {
	position: absolute;
	bottom: 0.75rem;
	inset-inline-start: 0;
	top: 0.75rem;
	width: 1px;
	background-color: var(--fallback-bc, oklch(var(--bc) / 0.1));
	content: '';
}
.menu :where(li:not(.menu-title) > :not(ul):not(details):not(.menu-title)),
.menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
	border-radius: var(--rounded-btn, 0.5rem);
	padding: 0.5rem 1rem;
	text-align: start;
	transition-property:
		color,
		background-color,
		border-color,
		text-decoration-color,
		fill,
		stroke,
		opacity,
		box-shadow,
		transform,
		filter,
		-webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property:
		color,
		background-color,
		border-color,
		text-decoration-color,
		fill,
		stroke,
		opacity,
		box-shadow,
		transform,
		filter,
		backdrop-filter,
		-webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-duration: 0.2s;
	text-wrap: balance;
}
:where(.menu li:not(.menu-title):not(.disabled) > :not(ul):not(details):not(.menu-title)):is(
		summary
	):not(.active):focus-visible,
:where(.menu li:not(.menu-title):not(.disabled) > :not(ul):not(details):not(.menu-title)):not(
		summary
	):not(.active).focus,
:where(.menu li:not(.menu-title):not(.disabled) > :not(ul):not(details):not(.menu-title)):not(
		summary
	):not(.active):focus,
:where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):is(
		summary
	):not(.active):focus-visible,
:where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(
		summary
	):not(.active).focus,
:where(.menu li:not(.menu-title):not(.disabled) > details > summary:not(.menu-title)):not(
		summary
	):not(.active):focus {
	cursor: pointer;
	background-color: var(--fallback-bc, oklch(var(--bc) / 0.1));
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	outline: 2px solid #0000;
	outline-offset: 2px;
}
.menu li > :not(ul):not(.menu-title):not(details).active,
.menu li > :not(ul):not(.menu-title):not(details):active,
.menu li > details > summary:active {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-nc, oklch(var(--nc) / var(--tw-text-opacity)));
}
.menu :where(li > details > summary)::-webkit-details-marker {
	display: none;
}
.menu :where(li > .menu-dropdown-toggle):after,
.menu :where(li > details > summary):after {
	justify-self: end;
	display: block;
	margin-top: -0.5rem;
	height: 0.5rem;
	width: 0.5rem;
	transform: rotate(45deg);
	transition-property: transform, margin-top;
	transition-duration: 0.3s;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	content: '';
	transform-origin: 75% 75%;
	box-shadow: 2px 2px;
	pointer-events: none;
}
.menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after,
.menu :where(li > details[open] > summary):after {
	transform: rotate(225deg);
	margin-top: 0;
}
.mockup-browser .mockup-browser-toolbar .input {
	position: relative;
	margin-left: auto;
	margin-right: auto;
	display: block;
	height: 1.75rem;
	width: 24rem;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
	padding-left: 2rem;
	direction: ltr;
}
.mockup-browser .mockup-browser-toolbar .input:before {
	left: 0.5rem;
	aspect-ratio: 1/1;
	height: 0.75rem;
	--tw-translate-y: -50%;
	border-radius: 9999px;
	border-width: 2px;
	border-color: currentColor;
}
.mockup-browser .mockup-browser-toolbar .input:after,
.mockup-browser .mockup-browser-toolbar .input:before {
	content: '';
	position: absolute;
	top: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
	opacity: 0.6;
}
.mockup-browser .mockup-browser-toolbar .input:after {
	left: 1.25rem;
	height: 0.5rem;
	--tw-translate-y: 25%;
	--tw-rotate: -45deg;
	border-radius: 9999px;
	border-width: 1px;
	border-color: currentColor;
}
@keyframes modal-pop {
	0% {
		opacity: 0;
	}
}
@keyframes progress-loading {
	50% {
		background-position-x: -115%;
	}
}
[type='radio'].radio {
	--chkbg: var(--bc);
	height: 1.5rem;
	width: 1.5rem;
	cursor: pointer;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	border-radius: 9999px;
	border-width: 1px;
	border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
	--tw-border-opacity: 0.2;
}
[type='radio'].radio:focus {
	box-shadow: none;
}
[type='radio'].radio:focus-visible {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
	outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
}
[type='radio'].radio:checked,
[type='radio'].radio[aria-checked='true'] {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	background-image: none;
	animation: radiomark var(--animation-input, 0.2s) ease-out;
	box-shadow:
		0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
		0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
}
[type='radio'].radio:disabled {
	cursor: not-allowed;
	opacity: 0.2;
}
@keyframes radiomark {
	0% {
		box-shadow:
			0 0 0 12px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
			0 0 0 12px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
	}
	50% {
		box-shadow:
			0 0 0 3px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
			0 0 0 3px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
	}
	to {
		box-shadow:
			0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
			0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
	}
}
.range:focus-visible::-webkit-slider-thumb {
	--focus-shadow: 0 0 0 6px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
		0 0 0 2rem var(--range-shdw) inset;
}
.range:focus-visible::-moz-range-thumb {
	--focus-shadow: 0 0 0 6px var(--fallback-b1, oklch(var(--b1) / 1)) inset,
		0 0 0 2rem var(--range-shdw) inset;
}
.range::-webkit-slider-runnable-track {
	height: 0.5rem;
	width: 100%;
	border-radius: var(--rounded-box, 1rem);
	background-color: var(--fallback-bc, oklch(var(--bc) / 0.1));
}
.range::-moz-range-track {
	height: 0.5rem;
	width: 100%;
	border-radius: var(--rounded-box, 1rem);
	background-color: var(--fallback-bc, oklch(var(--bc) / 0.1));
}
.range::-webkit-slider-thumb {
	position: relative;
	height: 1.5rem;
	width: 1.5rem;
	border-radius: var(--rounded-box, 1rem);
	border-style: none;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
	appearance: none;
	-webkit-appearance: none;
	top: 50%;
	color: var(--range-shdw);
	transform: translateY(-50%);
	--filler-size: 100rem;
	--filler-offset: 0.6rem;
	box-shadow:
		0 0 0 3px var(--range-shdw) inset,
		var(--focus-shadow, 0 0),
		calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size);
}
.range::-moz-range-thumb {
	position: relative;
	height: 1.5rem;
	width: 1.5rem;
	border-radius: var(--rounded-box, 1rem);
	border-style: none;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
	top: 50%;
	color: var(--range-shdw);
	--filler-size: 100rem;
	--filler-offset: 0.5rem;
	box-shadow:
		0 0 0 3px var(--range-shdw) inset,
		var(--focus-shadow, 0 0),
		calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size);
}
@keyframes rating-pop {
	0% {
		transform: translateY(-0.125em);
	}
	40% {
		transform: translateY(-0.125em);
	}
	to {
		transform: translateY(0);
	}
}
.select,
select.select {
	border-radius: var(--rounded-btn, 0.5rem);
	border-width: 1px;
	border-color: #0000;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
	padding-right: 2.5rem;
	background-image: linear-gradient(45deg, #0000 50%, currentColor 0),
		linear-gradient(135deg, currentColor 50%, #0000 0);
	background-position:
		calc(100% - 20px) calc(1px + 50%),
		calc(100% - 16.1px) calc(1px + 50%);
	background-size:
		4px 4px,
		4px 4px;
	background-repeat: no-repeat;
}
.select-bordered,
.select:focus,
select.select-bordered,
select.select:focus {
	border-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.select:focus,
select.select:focus {
	box-shadow: none;
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
	outline-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.select-disabled,
.select:disabled,
.select[disabled],
select.select-disabled,
select.select:disabled,
select.select[disabled] {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
	--tw-text-opacity: 0.2;
}
.select-disabled::-moz-placeholder,
.select:disabled::-moz-placeholder,
.select[disabled]::-moz-placeholder,
select.select-disabled::-moz-placeholder,
select.select:disabled::-moz-placeholder,
select.select[disabled]::-moz-placeholder {
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
	--tw-placeholder-opacity: 0.2;
}
.select-disabled::placeholder,
.select:disabled::placeholder,
.select[disabled]::placeholder,
select.select-disabled::placeholder,
select.select:disabled::placeholder,
select.select[disabled]::placeholder {
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
	--tw-placeholder-opacity: 0.2;
}
.select-multiple,
.select[multiple],
.select[size].select:not([size='1']),
select.select-multiple,
select.select[multiple],
select.select[size]select.select:not([size='1']) {
	background-image: none;
	padding-right: 1rem;
}
[dir='rtl'] .select {
	background-position:
		12px calc(1px + 50%),
		16px calc(1px + 50%);
}
@keyframes skeleton {
	0% {
		background-position: 150%;
	}
	to {
		background-position: -50%;
	}
}
:where(.stats) > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-x-reverse: 0;
	--tw-divide-y-reverse: 0;
	border-width: calc(0px * (1 - var(--tw-divide-y-reverse))) calc(1px * var(--tw-divide-x-reverse))
		calc(0px * var(--tw-divide-y-reverse)) calc(1px * (1 - var(--tw-divide-x-reverse)));
}
:is([dir='rtl'] .stats > :not([hidden]) ~ :not([hidden])) {
	--tw-divide-x-reverse: 1;
}
.steps .step:before {
	top: 0;
	height: 0.5rem;
	width: 100%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	content: '';
	margin-inline-start: -100%;
}
.steps .step:after,
.steps .step:before {
	grid-column-start: 1;
	grid-row-start: 1;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
}
.steps .step:after {
	content: counter(step);
	counter-increment: step;
	z-index: 1;
	position: relative;
	display: grid;
	height: 2rem;
	width: 2rem;
	place-items: center;
	place-self: center;
	border-radius: 9999px;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
}
.steps .step:first-child:before {
	content: none;
}
.steps .step[data-content]:after {
	content: attr(data-content);
}
:is([dir='rtl'] .table) {
	text-align: right;
}
.table :where(th, td) {
	padding: 0.75rem 1rem;
	vertical-align: middle;
}
.table tr.active,
.table tr.active:nth-child(2n),
.table-zebra tbody tr:nth-child(2n) {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
}
.table-zebra tr.active,
.table-zebra tr.active:nth-child(2n),
.table-zebra-zebra tbody tr:nth-child(2n) {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
}
.table :where(thead, tbody) :where(tr:first-child:last-child),
.table :where(thead, tbody) :where(tr:not(:last-child)) {
	border-bottom-width: 1px;
	--tw-border-opacity: 1;
	border-bottom-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
}
.table :where(thead, tfoot) {
	white-space: nowrap;
	font-size: 0.75rem;
	line-height: 1rem;
	font-weight: 700;
	color: var(--fallback-bc, oklch(var(--bc) / 0.6));
}
@keyframes toast-pop {
	0% {
		transform: scale(0.9);
		opacity: 0;
	}
	to {
		transform: scale(1);
		opacity: 1;
	}
}
[type='checkbox'].toggle {
	--tglbg: var(--fallback-b1, oklch(var(--b1) / 1));
	--handleoffset: 1.5rem;
	--handleoffsetcalculator: calc(var(--handleoffset) * -1);
	--togglehandleborder: 0 0;
	height: 1.5rem;
	width: 3rem;
	cursor: pointer;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	border-radius: var(--rounded-badge, 1.9rem);
	border-width: 1px;
	border-color: currentColor;
	background-color: currentColor;
	color: var(--fallback-bc, oklch(var(--bc) / 0.5));
	transition:
		background,
		box-shadow var(--animation-input, 0.2s) ease-out;
	box-shadow:
		var(--handleoffsetcalculator) 0 0 2px var(--tglbg) inset,
		0 0 0 2px var(--tglbg) inset,
		var(--togglehandleborder);
}
[dir='rtl'] [type='checkbox'].toggle {
	--handleoffsetcalculator: calc(var(--handleoffset) * 1);
}
[type='checkbox'].toggle:focus-visible {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
	outline-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
[type='checkbox'].toggle:hover {
	background-color: currentColor;
}
[type='checkbox'].toggle:checked,
[type='checkbox'].toggle[aria-checked='true'],
[type='checkbox'].toggle[checked='true'] {
	background-image: none;
	--handleoffsetcalculator: var(--handleoffset);
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
}
[dir='rtl'] [type='checkbox'].toggle:checked,
[dir='rtl'] [type='checkbox'].toggle[aria-checked='true'],
[dir='rtl'] [type='checkbox'].toggle[checked='true'] {
	--handleoffsetcalculator: calc(var(--handleoffset) * -1);
}
[type='checkbox'].toggle:indeterminate {
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
}
[dir='rtl'] [type='checkbox'].toggle:indeterminate,
[type='checkbox'].toggle:indeterminate {
	box-shadow:
		calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,
		calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,
		0 0 0 2px var(--tglbg) inset;
}
[type='checkbox'].toggle:disabled {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
	background-color: initial;
	opacity: 0.3;
	--togglehandleborder: 0 0 0 3px var(--fallback-bc, oklch(var(--bc) / 1)) inset,
		var(--handleoffsetcalculator) 0 0 3px var(--fallback-bc, oklch(var(--bc) / 1)) inset;
}
.badge-xs {
	height: 0.75rem;
	font-size: 0.75rem;
	line-height: 0.75rem;
	padding-left: 0.313rem;
	padding-right: 0.313rem;
}
.badge-sm {
	height: 1rem;
	font-size: 0.75rem;
	line-height: 1rem;
	padding-left: 0.438rem;
	padding-right: 0.438rem;
}
.btm-nav-xs > :where(.active) {
	border-top-width: 1px;
}
.btm-nav-sm > :where(.active) {
	border-top-width: 2px;
}
.btm-nav-md > :where(.active) {
	border-top-width: 2px;
}
.btm-nav-lg > :where(.active) {
	border-top-width: 4px;
}
.btn-xs {
	height: 1.5rem;
	min-height: 1.5rem;
	padding-left: 0.5rem;
	padding-right: 0.5rem;
	font-size: 0.75rem;
}
.btn-sm {
	height: 2rem;
	min-height: 2rem;
	padding-left: 0.75rem;
	padding-right: 0.75rem;
	font-size: 0.875rem;
}
.btn-square:where(.btn-xs) {
	height: 1.5rem;
	width: 1.5rem;
	padding: 0;
}
.btn-square:where(.btn-sm) {
	height: 2rem;
	width: 2rem;
	padding: 0;
}
.btn-square:where(.btn-md) {
	height: 3rem;
	width: 3rem;
	padding: 0;
}
.btn-square:where(.btn-lg) {
	height: 4rem;
	width: 4rem;
	padding: 0;
}
.btn-circle:where(.btn-xs) {
	height: 1.5rem;
	width: 1.5rem;
	border-radius: 9999px;
	padding: 0;
}
.btn-circle:where(.btn-sm) {
	height: 2rem;
	width: 2rem;
	border-radius: 9999px;
	padding: 0;
}
.btn-circle:where(.btn-md) {
	height: 3rem;
	width: 3rem;
	border-radius: 9999px;
	padding: 0;
}
.btn-circle:where(.btn-lg) {
	height: 4rem;
	width: 4rem;
	border-radius: 9999px;
	padding: 0;
}
[type='checkbox'].checkbox-sm {
	height: 1.25rem;
	width: 1.25rem;
}
.drawer-open > .drawer-toggle {
	display: none;
}
.drawer-open > .drawer-toggle ~ .drawer-side {
	pointer-events: auto;
	visibility: visible;
	position: sticky;
	display: block;
	width: auto;
	overscroll-behavior: auto;
}
.drawer-open > .drawer-toggle ~ .drawer-side > :not(.drawer-overlay),
[dir='rtl'] .drawer-open > .drawer-toggle ~ .drawer-side > :not(.drawer-overlay) {
	transform: translateX(0);
}
.drawer-open > .drawer-toggle:checked ~ .drawer-side {
	pointer-events: auto;
	visibility: visible;
}
.indicator :where(.indicator-item) {
	bottom: auto;
	inset-inline-end: 0;
	inset-inline-start: auto;
	top: 0;
	--tw-translate-y: -50%;
	--tw-translate-x: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
:is([dir='rtl'] .indicator :where(.indicator-item)) {
	--tw-translate-x: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-start) {
	inset-inline-end: auto;
	inset-inline-start: 0;
	--tw-translate-x: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
:is([dir='rtl'] .indicator :where(.indicator-item.indicator-start)) {
	--tw-translate-x: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-center) {
	inset-inline-end: 50%;
	inset-inline-start: 50%;
	--tw-translate-x: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
:is([dir='rtl'] .indicator :where(.indicator-item.indicator-center)) {
	--tw-translate-x: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-end) {
	inset-inline-end: 0;
	inset-inline-start: auto;
	--tw-translate-x: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
:is([dir='rtl'] .indicator :where(.indicator-item.indicator-end)) {
	--tw-translate-x: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-bottom) {
	bottom: 0;
	top: auto;
	--tw-translate-y: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-middle) {
	bottom: 50%;
	top: 50%;
	--tw-translate-y: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-top) {
	bottom: auto;
	top: 0;
	--tw-translate-y: -50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.input-xs,
input.input-xs {
	height: 1.5rem;
	padding-left: 0.5rem;
	padding-right: 0.5rem;
	font-size: 0.75rem;
	line-height: 1rem;
	line-height: 1.625;
}
.input-sm,
input.input-sm {
	height: 2rem;
	padding-left: 0.75rem;
	padding-right: 0.75rem;
	font-size: 0.875rem;
	line-height: 2rem;
}
.join.join-vertical {
	flex-direction: column;
}
.join.join-vertical .join-item:first-child:not(:last-child),
.join.join-vertical :first-child:not(:last-child) .join-item {
	border-end-start-radius: 0;
	border-end-end-radius: 0;
	border-start-start-radius: inherit;
	border-start-end-radius: inherit;
}
.join.join-vertical .join-item:last-child:not(:first-child),
.join.join-vertical :last-child:not(:first-child) .join-item {
	border-start-start-radius: 0;
	border-start-end-radius: 0;
	border-end-start-radius: inherit;
	border-end-end-radius: inherit;
}
.join.join-horizontal {
	flex-direction: row;
}
.join.join-horizontal .join-item:first-child:not(:last-child),
.join.join-horizontal :first-child:not(:last-child) .join-item {
	border-end-end-radius: 0;
	border-start-end-radius: 0;
	border-end-start-radius: inherit;
	border-start-start-radius: inherit;
}
.join.join-horizontal .join-item:last-child:not(:first-child),
.join.join-horizontal :last-child:not(:first-child) .join-item {
	border-end-start-radius: 0;
	border-start-start-radius: 0;
	border-end-end-radius: inherit;
	border-start-end-radius: inherit;
}
[type='radio'].radio-sm {
	height: 1.25rem;
	width: 1.25rem;
}
.range-xs {
	height: 1rem;
}
.range-xs::-webkit-slider-runnable-track {
	height: 0.25rem;
}
.range-xs::-moz-range-track {
	height: 0.25rem;
}
.range-xs::-webkit-slider-thumb {
	height: 1rem;
	width: 1rem;
	--filler-offset: 0.4rem;
}
.range-xs::-moz-range-thumb {
	height: 1rem;
	width: 1rem;
	--filler-offset: 0.4rem;
}
.stats-vertical {
	grid-auto-flow: row;
}
.steps-horizontal .step {
	display: grid;
	grid-template-columns: repeat(1, minmax(0, 1fr));
	grid-template-rows: repeat(2, minmax(0, 1fr));
	place-items: center;
	text-align: center;
}
.steps-vertical .step {
	display: grid;
	grid-template-columns: repeat(2, minmax(0, 1fr));
	grid-template-rows: repeat(1, minmax(0, 1fr));
}
[type='checkbox'].toggle-sm {
	--handleoffset: 0.75rem;
	height: 1.25rem;
	width: 2rem;
}
.avatar.online:before {
	background-color: var(--fallback-su, oklch(var(--su) / var(--tw-bg-opacity)));
}
.avatar.offline:before,
.avatar.online:before {
	content: '';
	position: absolute;
	z-index: 10;
	display: block;
	border-radius: 9999px;
	--tw-bg-opacity: 1;
	outline-style: solid;
	outline-width: 2px;
	outline-color: var(--fallback-b1, oklch(var(--b1) / 1));
	width: 15%;
	height: 15%;
	top: 7%;
	right: 7%;
}
.avatar.offline:before {
	background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
}
.card-compact .card-body {
	padding: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.card-compact .card-title {
	margin-bottom: 0.25rem;
}
.card-normal .card-body {
	padding: var(--padding-card, 2rem);
	font-size: 1rem;
	line-height: 1.5rem;
}
.card-normal .card-title {
	margin-bottom: 0.75rem;
}
.drawer-open > .drawer-toggle ~ .drawer-side > .drawer-overlay {
	cursor: default;
	background-color: initial;
}
.join.join-vertical > :where(:not(:first-child)) {
	margin-left: 0;
	margin-right: 0;
	margin-top: -1px;
}
.join.join-horizontal > :where(:not(:first-child)) {
	margin-top: 0;
	margin-bottom: 0;
	margin-inline-start: -1px;
}
.stats-vertical > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-x-reverse: 0;
	--tw-divide-y-reverse: 0;
	border-width: calc(1px * (1 - var(--tw-divide-y-reverse))) calc(0px * var(--tw-divide-x-reverse))
		calc(1px * var(--tw-divide-y-reverse)) calc(0px * (1 - var(--tw-divide-x-reverse)));
}
.stats-vertical {
	overflow-y: auto;
}
.steps-horizontal .step {
	grid-template-rows: 40px 1fr;
	grid-template-columns: auto;
	min-width: 4rem;
}
.steps-horizontal .step:before {
	height: 0.5rem;
	width: 100%;
	--tw-translate-x: 0px;
	--tw-translate-y: 0px;
	content: '';
	margin-inline-start: -100%;
}
.steps-horizontal .step:before,
:is([dir='rtl'] .steps-horizontal .step):before {
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
:is([dir='rtl'] .steps-horizontal .step):before {
	--tw-translate-x: 0px;
}
.steps-vertical .step {
	gap: 0.5rem;
	grid-template-columns: 40px 1fr;
	grid-template-rows: auto;
	min-height: 4rem;
	justify-items: start;
}
.steps-vertical .step:before {
	height: 100%;
	width: 0.5rem;
	--tw-translate-x: -50%;
	--tw-translate-y: -50%;
	margin-inline-start: 50%;
}
.steps-vertical .step:before,
:is([dir='rtl'] .steps-vertical .step):before {
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
:is([dir='rtl'] .steps-vertical .step):before {
	--tw-translate-x: 50%;
}
.z-10 {
	z-index: 10;
}
.col-span-12 {
	grid-column: span 12 / span 12;
}
.m-4 {
	margin: 1rem;
}
.mx-4 {
	margin-left: 1rem;
	margin-right: 1rem;
}
.my-6 {
	margin-top: 1.5rem;
	margin-bottom: 1.5rem;
}
.mt-3 {
	margin-top: 0.75rem;
}
.mt-4 {
	margin-top: 1rem;
}
.inline-block {
	display: inline-block;
}
.flex {
	display: flex;
}
.table {
	display: table;
}
.grid {
	display: grid;
}
.h-10 {
	height: 2.5rem;
}
.h-14 {
	height: 3.5rem;
}
.h-32 {
	height: 8rem;
}
.h-4 {
	height: 1rem;
}
.h-5 {
	height: 1.25rem;
}
.h-6 {
	height: 1.5rem;
}
.h-full {
	height: 100%;
}
.min-h-screen {
	min-height: 100vh;
}
.w-0 {
	width: 0;
}
.w-1\/2 {
	width: 50%;
}
.w-10 {
	width: 2.5rem;
}
.w-14 {
	width: 3.5rem;
}
.w-32 {
	width: 8rem;
}
.w-4 {
	width: 1rem;
}
.w-5 {
	width: 1.25rem;
}
.w-52 {
	width: 13rem;
}
.w-6 {
	width: 1.5rem;
}
.w-72 {
	width: 18rem;
}
.w-8 {
	width: 2rem;
}
.w-80 {
	width: 20rem;
}
.w-full {
	width: 100%;
}
.shrink-0 {
	flex-shrink: 0;
}
.grow {
	flex-grow: 1;
}
.grow-0 {
	flex-grow: 0;
}
.cursor-pointer {
	cursor: pointer;
}
.grid-cols-12 {
	grid-template-columns: repeat(12, minmax(0, 1fr));
}
.grid-cols-2 {
	grid-template-columns: repeat(2, minmax(0, 1fr));
}
.grid-rows-\[min-content\] {
	grid-template-rows: min-content;
}
.flex-col {
	flex-direction: column;
}
.items-start {
	align-items: flex-start;
}
.items-end {
	align-items: flex-end;
}
.items-center {
	align-items: center;
}
.justify-start {
	justify-content: flex-start;
}
.justify-between {
	justify-content: space-between;
}
.gap-1 {
	gap: 0.25rem;
}
.gap-10 {
	gap: 2.5rem;
}
.gap-2 {
	gap: 0.5rem;
}
.gap-4 {
	gap: 1rem;
}
.gap-y-12 {
	row-gap: 3rem;
}
.justify-self-end {
	justify-self: end;
}
.overflow-hidden {
	overflow: hidden;
}
.overflow-x-auto {
	overflow-x: auto;
}
.overflow-y-auto {
	overflow-y: auto;
}
.rounded-box {
	border-radius: var(--rounded-box, 1rem);
}
.rounded-btn {
	border-radius: var(--rounded-btn, 0.5rem);
}
.rounded-full {
	border-radius: 9999px;
}
.border-t-2 {
	border-top-width: 2px;
}
.border-base-content\/5 {
	border-color: var(--fallback-bc, oklch(var(--bc) / 0.05));
}
.bg-\[\#19D6BF\] {
	--tw-bg-opacity: 1;
	background-color: rgb(25 214 191 / var(--tw-bg-opacity));
}
.bg-\[\#3C37FF\] {
	--tw-bg-opacity: 1;
	background-color: rgb(60 55 255 / var(--tw-bg-opacity));
}
.bg-\[\#A838FF\] {
	--tw-bg-opacity: 1;
	background-color: rgb(168 56 255 / var(--tw-bg-opacity));
}
.bg-\[\#FFBD3C\] {
	--tw-bg-opacity: 1;
	background-color: rgb(255 189 60 / var(--tw-bg-opacity));
}
.bg-base-100 {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
}
.bg-base-200 {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
}
.bg-primary {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
}
.fill-base-100 {
	fill: var(--fallback-b1, oklch(var(--b1) / 1));
}
.fill-base-content {
	fill: var(--fallback-bc, oklch(var(--bc) / 1));
}
.fill-base-content\/80 {
	fill: var(--fallback-bc, oklch(var(--bc) / 0.8));
}
.stroke-current {
	stroke: currentColor;
}
.p-1 {
	padding: 0.25rem;
}
.p-2 {
	padding: 0.5rem;
}
.p-4 {
	padding: 1rem;
}
.p-6 {
	padding: 1.5rem;
}
.px-2 {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}
.px-6 {
	padding-left: 1.5rem;
	padding-right: 1.5rem;
}
.py-10 {
	padding-top: 2.5rem;
	padding-bottom: 2.5rem;
}
.py-2 {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}
.py-4 {
	padding-top: 1rem;
	padding-bottom: 1rem;
}
.pb-0 {
	padding-bottom: 0;
}
.pt-0 {
	padding-top: 0;
}
.text-center {
	text-align: center;
}
.font-mono {
	font-family:
		ui-monospace,
		SFMono-Regular,
		Menlo,
		Monaco,
		Consolas,
		Liberation Mono,
		Courier New,
		monospace;
}
.text-sm {
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.text-xs {
	font-size: 0.75rem;
	line-height: 1rem;
}
.font-black {
	font-weight: 900;
}
.font-bold {
	font-weight: 700;
}
.font-light {
	font-weight: 300;
}
.text-base-content\/30 {
	color: var(--fallback-bc, oklch(var(--bc) / 0.3));
}
.text-base-content\/50 {
	color: var(--fallback-bc, oklch(var(--bc) / 0.5));
}
.text-base-content\/60 {
	color: var(--fallback-bc, oklch(var(--bc) / 0.6));
}
.text-base-content\/70 {
	color: var(--fallback-bc, oklch(var(--bc) / 0.7));
}
.text-error {
	--tw-text-opacity: 1;
	color: var(--fallback-er, oklch(var(--er) / var(--tw-text-opacity)));
}
.text-primary-content {
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}
.text-success {
	--tw-text-opacity: 1;
	color: var(--fallback-su, oklch(var(--su) / var(--tw-text-opacity)));
}
.opacity-50 {
	opacity: 0.5;
}
.shadow-2xl {
	--tw-shadow: 0 25px 50px -12px #00000040;
	--tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
}
.shadow-2xl,
.shadow-sm {
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
		var(--tw-shadow);
}
.shadow-sm {
	--tw-shadow: 0 1px 2px 0 #0000000d;
	--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
}
.\[--area-opacity\:\.2\] {
	--area-opacity: 0.2;
}
.\[--shape-color-1\:\#A838FF\] {
	--shape-color-1: #a838ff;
}
.\[--shape-color-2\:\#19D6BF\] {
	--shape-color-2: #19d6bf;
}
.\[--shape-color-3\:\#3C37FF\] {
	--shape-color-3: #3c37ff;
}
.\[--shape-color-4\:\#FFBD3C\] {
	--shape-color-4: #ffbd3c;
}
.\[--shape-color\:\#19D6BF\] {
	--shape-color: #19d6bf;
}
.\[--shape-color\:\#A838FF\] {
	--shape-color: #a838ff;
}
.\[--shape-color\:oklch\(var\(--pc\)\)\] {
	--shape-color: oklch(var(--pc));
}
@media (min-width: 1024px) {
	.lg\:drawer-open > .drawer-toggle {
		display: none;
	}
	.lg\:drawer-open > .drawer-toggle ~ .drawer-side {
		pointer-events: auto;
		visibility: visible;
		position: sticky;
		display: block;
		width: auto;
		overscroll-behavior: auto;
	}
	.lg\:drawer-open > .drawer-toggle ~ .drawer-side > :not(.drawer-overlay),
	[dir='rtl'] .lg\:drawer-open > .drawer-toggle ~ .drawer-side > :not(.drawer-overlay) {
		transform: translateX(0);
	}
	.lg\:drawer-open > .drawer-toggle:checked ~ .drawer-side {
		pointer-events: auto;
		visibility: visible;
	}
	.lg\:drawer-open > .drawer-toggle ~ .drawer-side > .drawer-overlay {
		cursor: default;
		background-color: initial;
	}
}
@media (min-width: 1280px) {
	.xl\:stats-horizontal {
		grid-auto-flow: column;
	}
	.xl\:stats-horizontal > :not([hidden]) ~ :not([hidden]) {
		--tw-divide-x-reverse: 0;
		--tw-divide-y-reverse: 0;
		border-width: calc(0px * (1 - var(--tw-divide-y-reverse)))
			calc(1px * var(--tw-divide-x-reverse)) calc(0px * var(--tw-divide-y-reverse))
			calc(1px * (1 - var(--tw-divide-x-reverse)));
	}
	.xl\:stats-horizontal {
		overflow-x: auto;
	}
	:is([dir='rtl'] .xl\:stats-horizontal) {
		--tw-divide-x-reverse: 1;
	}
}
@media not all and (min-width: 640px) {
	.max-sm\:w-24 {
		width: 6rem;
	}
}
@media (min-width: 1024px) {
	.lg\:hidden {
		display: none;
	}
	.lg\:gap-4 {
		gap: 1rem;
	}
	.lg\:gap-x-12 {
		-moz-column-gap: 3rem;
		column-gap: 3rem;
	}
	.lg\:p-10 {
		padding: 2.5rem;
	}
	.lg\:text-2xl {
		font-size: 1.5rem;
		line-height: 2rem;
	}
	.lg\:font-light {
		font-weight: 300;
	}
}
@media (min-width: 1280px) {
	.xl\:col-span-3 {
		grid-column: span 3 / span 3;
	}
	.xl\:col-span-4 {
		grid-column: span 4 / span 4;
	}
	.xl\:col-span-5 {
		grid-column: span 5 / span 5;
	}
	.xl\:col-span-6 {
		grid-column: span 6 / span 6;
	}
	.xl\:col-span-7 {
		grid-column: span 7 / span 7;
	}
}
