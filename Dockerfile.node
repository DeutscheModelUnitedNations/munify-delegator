FROM oven/bun:1.2 AS builder
WORKDIR /app

ARG VERSION
ENV PUBLIC_VERSION=$VERSION
ARG SHA
ENV PUBLIC_SHA=$SHA

RUN apt-get update && apt-get install -y jq

COPY package.json bun.lockb tsconfig.json ./
RUN  bun install --frozen-lockfile
# we need to generate prisma files before building to prevent type errors
COPY ./prisma/migrations ./prisma/migrations/
COPY ./prisma/schema.prisma ./prisma/schema.prisma
COPY ./prisma/pothos.config.cjs ./prisma/pothos.config.cjs
RUN bunx prisma generate

COPY . .
# the build command generates a few things, such as i18n outputs
# therefore we need to run the build command BEFORE we check for correctness
RUN bun run build
RUN bun run check

# remove all dependencies which are unused
# TODO https://github.com/oven-sh/bun/issues/3605

RUN jq '.type="commonjs"' package.json > tmp.json && mv tmp.json package.json

FROM node:24.0-slim AS release
WORKDIR /app

ARG VERSION
ENV PUBLIC_VERSION=$VERSION
ARG SHA
ENV PUBLIC_SHA=$SHA

# the runtime dependencies
COPY --from=builder /app/node_modules ./node_modules/

# the sveltekit output
COPY --from=builder /app/build .
# the tasks build output
COPY --from=builder /app/tasksOut .
# the prisma schema and migrations
COPY --from=builder /app/prisma ./prisma/

# TODO check if user is created

# Make a folder called /app/ephemeralData
RUN mkdir /app/ephemeralData
# Change ownership to the node user
RUN chown -R node:node /app/node_modules /app/prisma /app/ephemeralData

ENV NODE_ENV=production
USER node
EXPOSE 3000/tcp
# HEALTHCHECK --interval=15s --timeout=10s --retries=3 CMD curl -f http://0.0.0.0:3000/api/health/ready || exit 1
CMD ["sh", "-c", "npx prisma migrate deploy && node ./index.js"]
